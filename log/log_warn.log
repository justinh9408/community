2020-03-30 15:41:44,383 WARN [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [AbstractApplicationContext.java:558] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shareController': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'qiniu.bucket.share.url' in value "${qiniu.bucket.share.url}"
2020-03-30 15:46:46,146 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:738] [Consumer clientId=consumer-2, groupId=community-consumer-group] Asynchronous auto-commit of offsets {SHARE-0=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-9=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-2=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-3=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-4=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
2020-03-30 15:46:46,146 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:738] [Consumer clientId=consumer-4, groupId=community-consumer-group] Asynchronous auto-commit of offsets {PUBLISH-9=OffsetAndMetadata{offset=2, leaderEpoch=0, metadata=''}, PUBLISH-0=OffsetAndMetadata{offset=3, leaderEpoch=0, metadata=''}, PUBLISH-4=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, PUBLISH-3=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, PUBLISH-2=OffsetAndMetadata{offset=0, leaderEpoch=0, metadata=''}, PUBLISH-1=OffsetAndMetadata{offset=2, leaderEpoch=0, metadata=''}, PUBLISH-8=OffsetAndMetadata{offset=2, leaderEpoch=0, metadata=''}, PUBLISH-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, PUBLISH-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, PUBLISH-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
2020-03-30 15:46:46,145 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:738] [Consumer clientId=consumer-3, groupId=community-consumer-group] Asynchronous auto-commit of offsets {FOLLOW-2=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-0=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-6=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, LIKE-9=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-4=OffsetAndMetadata{offset=2, leaderEpoch=0, metadata=''}, COMMENT-2=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-3=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, FOLLOW-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-4=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-9=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, COMMENT-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-3=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-0=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, LIKE-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-2=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-4=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-9=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-0=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-3=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
2020-03-30 15:46:46,155 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:760] [Consumer clientId=consumer-4, groupId=community-consumer-group] Synchronous auto-commit of offsets {PUBLISH-9=OffsetAndMetadata{offset=2, leaderEpoch=0, metadata=''}, PUBLISH-0=OffsetAndMetadata{offset=3, leaderEpoch=0, metadata=''}, PUBLISH-4=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, PUBLISH-3=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, PUBLISH-2=OffsetAndMetadata{offset=0, leaderEpoch=0, metadata=''}, PUBLISH-1=OffsetAndMetadata{offset=2, leaderEpoch=0, metadata=''}, PUBLISH-8=OffsetAndMetadata{offset=2, leaderEpoch=0, metadata=''}, PUBLISH-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, PUBLISH-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, PUBLISH-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
2020-03-30 15:46:46,157 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:760] [Consumer clientId=consumer-2, groupId=community-consumer-group] Synchronous auto-commit of offsets {SHARE-0=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-9=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-2=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-3=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, SHARE-4=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
2020-03-30 15:46:46,158 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:760] [Consumer clientId=consumer-3, groupId=community-consumer-group] Synchronous auto-commit of offsets {FOLLOW-2=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-0=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-6=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, LIKE-9=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-4=OffsetAndMetadata{offset=2, leaderEpoch=0, metadata=''}, COMMENT-2=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-3=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, FOLLOW-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-4=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-9=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, COMMENT-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-3=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, COMMENT-0=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, LIKE-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-2=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-4=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-9=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, LIKE-0=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, FOLLOW-3=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
2020-03-30 15:46:46,161 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:760] [Consumer clientId=consumer-1, groupId=community-consumer-group] Synchronous auto-commit of offsets {DELETE-3=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-4=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-2=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, DELETE-0=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-9=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
2020-03-30 15:46:46,683 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:738] [Consumer clientId=consumer-1, groupId=community-consumer-group] Asynchronous auto-commit of offsets {DELETE-3=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-4=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-1=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-2=OffsetAndMetadata{offset=1, leaderEpoch=0, metadata=''}, DELETE-0=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-9=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-7=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-8=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-5=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}, DELETE-6=OffsetAndMetadata{offset=0, leaderEpoch=null, metadata=''}} failed: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
